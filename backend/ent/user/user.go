// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIdentityCard holds the string denoting the identity_card field in the database.
	FieldIdentityCard = "identity_card"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldConfirmPassword holds the string denoting the confirm_password field in the database.
	FieldConfirmPassword = "confirm_password"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldDateOfBirth holds the string denoting the date_of_birth field in the database.
	FieldDateOfBirth = "date_of_birth"

	// EdgeGenderID holds the string denoting the gender_id edge name in mutations.
	EdgeGenderID = "Gender_ID"
	// EdgeUserTypeID holds the string denoting the usertype_id edge name in mutations.
	EdgeUserTypeID = "UserType_ID"
	// EdgeProvinceID holds the string denoting the province_id edge name in mutations.
	EdgeProvinceID = "Province_ID"

	// Table holds the table name of the user in the database.
	Table = "users"
	// GenderIDTable is the table the holds the Gender_ID relation/edge.
	GenderIDTable = "users"
	// GenderIDInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	GenderIDInverseTable = "genders"
	// GenderIDColumn is the table column denoting the Gender_ID relation/edge.
	GenderIDColumn = "gender_gender_id"
	// UserTypeIDTable is the table the holds the UserType_ID relation/edge.
	UserTypeIDTable = "users"
	// UserTypeIDInverseTable is the table name for the UserType entity.
	// It exists in this package in order to avoid circular dependency with the "usertype" package.
	UserTypeIDInverseTable = "user_types"
	// UserTypeIDColumn is the table column denoting the UserType_ID relation/edge.
	UserTypeIDColumn = "user_type_user_type_id"
	// ProvinceIDTable is the table the holds the Province_ID relation/edge.
	ProvinceIDTable = "users"
	// ProvinceIDInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	ProvinceIDInverseTable = "provinces"
	// ProvinceIDColumn is the table column denoting the Province_ID relation/edge.
	ProvinceIDColumn = "province_province_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldIdentityCard,
	FieldPassword,
	FieldConfirmPassword,
	FieldFirstName,
	FieldLastName,
	FieldEmail,
	FieldPhone,
	FieldDateOfBirth,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"gender_gender_id",
	"province_province_id",
	"user_type_user_type_id",
}

var (
	// IdentityCardValidator is a validator for the "Identity_card" field. It is called by the builders before save.
	IdentityCardValidator func(int) error
	// PasswordValidator is a validator for the "Password" field. It is called by the builders before save.
	PasswordValidator func(string) error
	// ConfirmPasswordValidator is a validator for the "Confirm_password" field. It is called by the builders before save.
	ConfirmPasswordValidator func(string) error
	// FirstNameValidator is a validator for the "First_name" field. It is called by the builders before save.
	FirstNameValidator func(string) error
	// LastNameValidator is a validator for the "Last_name" field. It is called by the builders before save.
	LastNameValidator func(string) error
	// EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PhoneValidator is a validator for the "Phone" field. It is called by the builders before save.
	PhoneValidator func(int) error
	// DateOfBirthValidator is a validator for the "Date_of_birth" field. It is called by the builders before save.
	DateOfBirthValidator func(int) error
)
